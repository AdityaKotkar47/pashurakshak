<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="color-scheme" content="light dark">
    <title>Reset Your Password</title>
    <style>
        :root {
            --bg-primary: #fafafa;
            --bg-secondary: #ffffff;
            --text-primary: #0f172a;
            --text-secondary: #334155;
            --accent-primary: #4f46e5;
            --accent-secondary: #6366f1;
            --success: #059669;
            --error: #dc2626;
            --border: #e2e8f0;
            --shadow: rgba(0, 0, 0, 0.08);
            --glow: rgba(79, 70, 229, 0.15);
            --cursor-color: rgba(79, 70, 229, 0.8);
            --cursor-dot: #4f46e5;
        }

        @media (prefers-color-scheme: dark) {
            :root {
                --bg-primary: #030712;
                --bg-secondary: #0f172a;
                --text-primary: #f8fafc;
                --text-secondary: #cbd5e1;
                --border: #1e293b;
                --shadow: rgba(0, 0, 0, 0.3);
                --glow: rgba(99, 102, 241, 0.25);
                --cursor-color: rgba(99, 102, 241, 0.8);
                --cursor-dot: #6366f1;
            }
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif;
            background-color: var(--bg-primary);
            color: var(--text-primary);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: none;
            overflow: hidden;
        }

        .background {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: -1;
            background: 
                radial-gradient(circle at var(--x, 50%) var(--y, 50%), 
                var(--glow) 0%,
                transparent 40%),
                linear-gradient(120deg, 
                    rgba(79, 70, 229, 0.05) 0%, 
                    rgba(99, 102, 241, 0.05) 50%,
                    rgba(79, 70, 229, 0.05) 100%);
            opacity: 1;
            transition: all 0.3s ease;
        }

        @media (prefers-color-scheme: dark) {
            .background {
                background: 
                    radial-gradient(circle at var(--x, 50%) var(--y, 50%), 
                    var(--glow) 0%,
                    transparent 60%);
                opacity: 0.8;
            }
        }

        .container {
            width: 100%;
            max-width: 420px;
            padding: 24px;
            position: relative;
            margin: 40px auto;
        }

        .card {
            background: var(--bg-secondary);
            padding: 40px;
            border-radius: 24px;
            box-shadow: 0 8px 32px var(--shadow);
            transition: all 0.3s ease;
            position: relative;
            overflow: visible;
            backdrop-filter: blur(8px);
            -webkit-backdrop-filter: blur(8px);
            min-height: 480px;
            display: flex;
            flex-direction: column;
        }

        .card::before {
            content: '';
            position: absolute;
            inset: 0;
            background: linear-gradient(to right, var(--accent-primary), var(--accent-secondary));
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .card:hover::before {
            opacity: 0.03;
        }

        h1 {
            color: var(--text-primary);
            text-align: center;
            margin-bottom: 32px;
            font-size: 28px;
            font-weight: 700;
            background: linear-gradient(to right, var(--accent-primary), var(--accent-secondary));
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            transition: all 0.3s ease;
        }

        .form-group {
            margin-bottom: 24px;
            position: relative;
            transition: transform 0.3s ease;
        }

        .form-group:hover {
            transform: translateX(4px);
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: var(--text-secondary);
            font-weight: 500;
            font-size: 14px;
            transition: color 0.3s ease;
        }

        input {
            width: 100%;
            padding: 12px 16px;
            background: var(--bg-primary);
            border: 2px solid var(--border);
            border-radius: 12px;
            font-size: 16px;
            color: var(--text-primary);
            transition: all 0.3s ease;
        }

        input:focus {
            outline: none;
            border-color: var(--accent-primary);
            box-shadow: 0 0 0 4px var(--glow);
            transform: translateY(-2px);
        }

        button {
            width: 100%;
            padding: 14px;
            background: linear-gradient(to right, var(--accent-primary), var(--accent-secondary));
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: none;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            margin-top: auto;
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px var(--glow);
        }

        button:active {
            transform: translateY(0);
        }

        .error {
            color: var(--error);
            font-size: 14px;
            margin-top: 8px;
            display: none;
            animation: slideIn 0.3s ease;
        }

        .success-state {
            position: absolute;
            inset: 0;
            background: var(--bg-secondary);
            display: none;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 40px;
            animation: fadeIn 0.5s ease;
            border-radius: 24px;
            height: 100%;
            min-height: 480px;
        }

        .success-icon {
            font-size: 72px;
            margin-bottom: 28px;
            animation: popIn 0.5s cubic-bezier(0.17, 0.89, 0.32, 1.49);
            background: linear-gradient(45deg, var(--success), var(--accent-primary));
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .success-title {
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 20px;
            text-align: center;
            background: linear-gradient(45deg, var(--success), var(--accent-primary));
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            max-width: 90%;
        }

        .success-message {
            color: var(--text-secondary);
            text-align: center;
            line-height: 1.6;
            font-size: 15px;
            max-width: 85%;
            margin: 0 auto;
        }

        /* Custom Cursor */
        .cursor-outer {
            width: 32px;
            height: 32px;
            border: 2px solid var(--cursor-color);
            border-radius: 50%;
            position: fixed;
            pointer-events: none;
            z-index: 9999;
            opacity: 0.8;
            transition: all 0.2s cubic-bezier(0.17, 0.67, 0.83, 0.67);
            transform: translate(-50%, -50%);
            backdrop-filter: invert(0.15);
            -webkit-backdrop-filter: invert(0.15);
        }

        .cursor-inner {
            width: 4px;
            height: 4px;
            background: var(--cursor-dot);
            border-radius: 50%;
            position: fixed;
            pointer-events: none;
            z-index: 9999;
            transition: all 0.1s cubic-bezier(0.17, 0.67, 0.83, 0.67);
            transform: translate(-50%, -50%);
            box-shadow: 0 0 10px var(--cursor-color);
        }

        /* Animations */
        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateX(-10px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
            }
            to {
                opacity: 1;
            }
        }

        @keyframes popIn {
            0% {
                opacity: 0;
                transform: scale(0.5);
            }
            70% {
                transform: scale(1.2);
            }
            100% {
                opacity: 1;
                transform: scale(1);
            }
        }

        /* Cursor Interactions */
        button:hover ~ .cursor-outer {
            transform: translate(-50%, -50%) scale(1.5);
            background: var(--cursor-color);
            opacity: 0.3;
            border-color: transparent;
        }

        input:hover ~ .cursor-outer {
            transform: translate(-50%, -50%) scale(0.75);
            border-width: 1px;
        }

        input:hover ~ .cursor-inner {
            transform: translate(-50%, -50%) scale(2);
        }

        .card:hover ~ .cursor-outer {
            opacity: 1;
        }

        .password-requirements {
            font-size: 13px;
            color: var(--text-secondary);
            margin-top: 8px;
            opacity: 0.8;
            transition: opacity 0.3s ease;
        }

        .form-group:hover .password-requirements {
            opacity: 1;
        }

        form {
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        .form-content {
            flex: 1;
        }
    </style>
</head>
<body>
    <div class="background"></div>
    <div class="container">
        <div class="card">
            <h1>Reset Your Password</h1>
            <form id="resetForm">
                <div class="form-content">
                    <div class="form-group">
                        <label for="password">New Password</label>
                        <input 
                            type="password" 
                            id="password" 
                            name="password" 
                            required 
                            minlength="6"
                            placeholder="Enter your new password"
                            autocomplete="new-password"
                        >
                        <div class="password-requirements">
                            Password must be at least 6 characters long
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="confirmPassword">Confirm Password</label>
                        <input 
                            type="password" 
                            id="confirmPassword" 
                            name="confirmPassword" 
                            required
                            placeholder="Confirm your new password"
                            autocomplete="new-password"
                        >
                        <div class="error" id="error-message">Passwords do not match</div>
                    </div>
                </div>
                <button type="submit">Reset Password</button>
            </form>
            <div class="success-state" id="successState">
                <div class="success-icon">✨</div>
                <div class="success-title">Password Reset Successful!</div>
                <div class="success-message">
                    Your password has been securely updated. You can now use your new password to log in to your account.
                </div>
            </div>
        </div>
    </div>

    <div class="cursor-outer"></div>
    <div class="cursor-inner"></div>

    <script>
        const cursorOuter = document.querySelector('.cursor-outer');
        const cursorInner = document.querySelector('.cursor-inner');
        const background = document.querySelector('.background');

        document.addEventListener('mousemove', (e) => {
            cursorOuter.style.left = e.clientX + 'px';
            cursorOuter.style.top = e.clientY + 'px';
            
            cursorInner.style.left = e.clientX + 'px';
            cursorInner.style.top = e.clientY + 'px';

            background.style.setProperty('--x', e.clientX + 'px');
            background.style.setProperty('--y', e.clientY + 'px');
        });

        document.querySelectorAll('button, input').forEach(elem => {
            elem.addEventListener('mouseenter', () => {
                cursorOuter.style.transform = `translate(-50%, -50%) scale(${elem.tagName === 'BUTTON' ? 1.5 : 0.5})`;
                if (elem.tagName === 'BUTTON') {
                    cursorOuter.style.backgroundColor = 'var(--accent-primary)';
                    cursorOuter.style.opacity = '0.2';
                }
            });

            elem.addEventListener('mouseleave', () => {
                cursorOuter.style.transform = 'translate(-50%, -50%) scale(1)';
                cursorOuter.style.backgroundColor = 'transparent';
                cursorOuter.style.opacity = '0.5';
            });
        });

        const form = document.getElementById('resetForm');
        const errorMessage = document.getElementById('error-message');
        const successState = document.getElementById('successState');
        const token = window.location.pathname.split('/').pop();

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;

            errorMessage.style.display = 'none';

            if (password !== confirmPassword) {
                errorMessage.style.display = 'block';
                return;
            }

            try {
                const response = await fetch(`/api/auth/reset-password/${token}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ password })
                });

                const data = await response.json();

                if (response.ok) {
                    form.style.opacity = 0;
                    form.style.transform = 'scale(0.95)';
                    setTimeout(() => {
                        form.style.display = 'none';
                        successState.style.display = 'flex';
                        successState.style.opacity = '0';
                        successState.style.transform = 'scale(0.95)';
                        requestAnimationFrame(() => {
                            successState.style.opacity = '1';
                            successState.style.transform = 'scale(1)';
                        });
                    }, 300);
                } else {
                    errorMessage.textContent = data.message || 'An error occurred';
                    errorMessage.style.display = 'block';
                }
            } catch (error) {
                errorMessage.textContent = 'An error occurred. Please try again.';
                errorMessage.style.display = 'block';
            }
        });
    </script>
</body>
</html> 